events {}

http {
    upstream web_backend {
        server web:8080;
    }

    upstream channels_backend {
        server channels:8001;
    }

    # Серверный блок для HTTP (порт 80)
    server {
        listen 80;
        server_name mazeoflie.online;

        # Перенаправление всех запросов на HTTPS
        location / {
            return 301 https://$host$request_uri;
        }

        # Обработка WebSocket на HTTP
        location /ws/ {
            proxy_pass http://channels_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }

    # Серверный блок для HTTPS (порт 443)
    server {
        listen 443 ssl;
        server_name mazeoflie.online;

        ssl_certificate /etc/letsencrypt/live/mazeoflie.online/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/mazeoflie.online/privkey.pem;
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_prefer_server_ciphers on;

        location / {
            proxy_pass http://web_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;
        }

        location /ws/ {
            proxy_pass http://channels_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}
